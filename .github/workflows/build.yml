name: build

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
    paths:
      - '**.py'
      - 'pyproject.toml'
  push:
    branches:
      - main
    paths:
      - '**.py'
      - 'pyproject.toml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9", "3.10", "3.11" ]

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest black
        pip install -e .[all]    

    - name: Display Python Version
      run: python -c "import sys; print(sys.version)"

    - name: Check for existing release
      if: github.event_name == 'pull_request'
      run: |
        VERSION=$(python -c "
        try:
            import tomllib
        except ImportError:
            import tomli as tomllib
        with open('pyproject.toml', 'rb') as f:
            print(tomllib.load(f)['project']['version'])
        ")
        echo "Checking for existing release v$VERSION"
        if gh release view "v$VERSION" >/dev/null 2>&1; then
          echo "::error::Release v$VERSION already exists. Please bump the version in pyproject.toml"
          exit 1
        else
          echo "Version v$VERSION is available"
        fi
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Auto-format with Black
      if: github.event_name == 'pull_request'
      run: |
        black ./engforge
        if ! git diff --quiet; then
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add -A
          git commit -m "Auto-format code with Black [skip ci]" || exit 0
          git push
        fi

    - name: Run tests
      run: python -m unittest discover -s engforge/test -p "test_*.py" -v

    - name: Verify Black formatting
      run: black --check --verbose ./engforge