[forgelog                ][97mStarting engforge Enviornment[0m
[configlog               ][97mConfiguring System: System[0m
GPU solver not available: PYNITE_GPU environment variable not set to `True`
[configlog               ][97mConfiguring System: CubeSystem[0m
[configlog               ][97mConfiguring System: DynamicSystem[0m
[configlog               ][97mConfiguring System: SpringMass[0m
[plotlog                 ][97madding PLOT|relplot.lineplot(throttle,w,hue=None,c:[None],r:[None],{}[0m
[configlog               ][97mConfiguring System: Airfilter[0m
[configlog               ][33mWARN: AirFilterAnalysis skipping inherited attr: system as a custom type overriding it[0m
[configlog               ][97mConfiguring System: SliderCrank[0m
[configlog               ][97mConfiguring System: EconDefault[0m
[configlog               ][97mConfiguring System: EconRecursive[0m
[configlog               ][97mConfiguring System: FanSystem[0m
[costlog                 ][33mWARN: assigning cost to non CostModel based slot base[0m
[configlog               ][97mConfiguring System: WideSystem[0m
[configlog               ][97mConfiguring System: NarrowSystem[0m
[configlog               ][97mConfiguring System: MockSystem[0m
[configlog               ][97mConfiguring System: PipeSystem[0m
[configlog               ][97mConfiguring System: SimpleContext[0m
[envvariable             ][97mloading section from /tmp/shapely_sections[0m
[configlog               ][33mWARN: ShapelySection.mesh_extent_decimation has no type[0m
[configlog               ][97mConfiguring System: Structure[0m
[configlog               ][97mConfiguring System: TestConfig[0m
[configlog               ][97mConfiguring System: Static[0m
[plotlog                 ][97mvalidating: <engforge.test.solver_testing_components.Airfilter object at 0x7fdaf4ef6d40>[0m
[airfilteranalysis-gilded][97mrunning analysis airfilteranalysis-gilded-tessellation with input () {'throttle': array([0.        , 0.11111111, 0.22222222, 0.33333333, 0.44444444,
       0.55555556, 0.66666667, 0.77777778, 0.88888889, 1.        ]), 'combos': '*', 'slv_vars': '*'}[0m
..........[plotlog                 ][97mPlotting airfilteranalysis[0m
[plotlog                 ][97mairfilteranalysis-gilded-tessellation system plotting system | <engforge.test.solver_testing_components.Airfilter object at 0x7fdaf4ef6d40>[0m
[plotlog                 ][97mPlotting airfilteranalysis.airfilter[0m
[plotlog                 ][97mairfilter-simple-proton plotting airfilteranalysis.airfilter.flow_curve | <engforge.attr_plotting.PlotInstance object at 0x7fdaf4ef4bb0>[0m
[plotlog                 ][97mplotting airfilter-simple-proton| relplot.lineplot with {'x': 'throttle', 'y': 'w', 'kind': 'line'}[0m
[airfilteranalysis-gilded][97mreport results[0m
[airfilteranalysis-gilded][97mshowing plots 1[0m
[airfilteranalysis-gilded][97mshowing airfilteranalysis.airfilter.flow_curve[0m
/mnt/c/Users/Sup/Ottermatics Dropbox/Ottermatics/engforge/engforge/analysis.py:103: UserWarning: FigureCanvasAgg is non-interactive, and thus cannot be shown
  fig.show()
[plotlog                 ][97mplotting airfilter-simple-proton| relplot.lineplot with {'x': 'throttle', 'y': 'w', 'kind': 'line'}[0m
.(<Figure size 500x500 with 1 Axes>, <seaborn.axisgrid.FacetGrid object at 0x7fdaf4bb7970>)
Figure(500x500)
[plotlog                 ][97mvalidating: <engforge.test.solver_testing_components.Airfilter object at 0x7fdbb4e9bca0>[0m
..........[plotlog                 ][97mplotting airfilter-forward-photon| relplot.lineplot with {'x': 'throttle', 'y': 'w', 'kind': 'line'}[0m
.[plotlog                 ][97mvalidating: <engforge.test.solver_testing_components.Airfilter object at 0x7fdbb4cb7d90>[0m
[airfilteranalysis-cream-][97mrunning analysis airfilteranalysis-cream-bias with input () {'throttle': array([0.        , 0.11111111, 0.22222222, 0.33333333, 0.44444444,
       0.55555556, 0.66666667, 0.77777778, 0.88888889, 1.        ]), 'combos': '*', 'slv_vars': '*'}[0m
..........[plotlog                 ][97mPlotting airfilteranalysis[0m
[plotlog                 ][97mairfilteranalysis-cream-bias system plotting system | <engforge.test.solver_testing_components.Airfilter object at 0x7fdbb4cb7d90>[0m
[plotlog                 ][97mPlotting airfilteranalysis.airfilter[0m
[plotlog                 ][97mairfilter-external-outlier plotting airfilteranalysis.airfilter.flow_curve | <engforge.attr_plotting.PlotInstance object at 0x7fdaf29bc910>[0m
[plotlog                 ][97mplotting airfilter-external-outlier| relplot.lineplot with {'x': 'throttle', 'y': 'w', 'kind': 'line'}[0m
[airfilteranalysis-cream-][97mreport results[0m
[airfilteranalysis-cream-][97mshowing plots 1[0m
[airfilteranalysis-cream-][97mshowing airfilteranalysis.airfilter.flow_curve[0m
/mnt/c/Users/Sup/Ottermatics Dropbox/Ottermatics/engforge/engforge/analysis.py:103: UserWarning: FigureCanvasAgg is non-interactive, and thus cannot be shown
  fig.show()
[plotlog                 ][97mplotting airfilter-external-outlier| relplot.lineplot with {'x': 'throttle', 'y': 'w', 'kind': 'line'}[0m
.(<Figure size 500x500 with 1 Axes>, <seaborn.axisgrid.FacetGrid object at 0x7fdaf296b4c0>)
Figure(500x500)
[plotlog                 ][97mvalidating: <engforge.test.solver_testing_components.Airfilter object at 0x7fdb0ac366e0>[0m
..........[plotlog                 ][97mplotting airfilter-coal-recall| relplot.lineplot with {'x': 'throttle', 'y': 'w', 'kind': 'line'}[0m
.[narrowsystem-square-deci][97mkeys: {'cdict_attrs_prop', 'citer_test_three', 'citer_name', 'cdict_test_two', 'citer_test_one', 'citer_attrs_str', 'citer_test_two', 'cdict_test_one', 'cdict_test_three', 'cdict_test_four', 'cdict_name', 'citer_attrs_prop', 'cdict_attrs_str', 'citer_test_four'} vs {'citer.component_type', 'dynamic_output_vars', 'cdict.test_four', 'citer.test_three', 'citer.current_item', 'citer.test_two', 'citer.test_four', 'cdict.test_one', 'cdict.component_type', 'citer.attrs_prop', 'cdict.time', 'cdict.attrs_prop', 'citer.time', 'dynamic_state_vars', 'citer.test_one', 'cdict.test_two', 'cdict.name', 'cdict.attrs_str', 'citer.attrs_str', 'time', 'citer.name', 'name', 'cdict.current_item', 'dynamic_input_vars', 'cdict.test_three'}[0m
F[widesystem-finite-neutro][97mkeys: {'cdict_hey_test_one', 'cdict_heyhey_attrs_prop', 'cdict_heyheyheyhey_attrs_prop', 'cdict_heyheyheyhey_attrs_str', 'citer_3_test_three', 'cdict_heyhey_test_two', 'citer_3_attrs_prop', 'cdict_hey_test_three', 'citer_0_test_three', 'citer_1_test_two', 'citer_4_test_three', 'citer_4_test_four', 'citer_2_test_one', 'citer_4_test_one', 'citer_3_name', 'cdict_heyheyheyhey_name', 'cdict_heyheyhey_test_two', 'citer_1_attrs_prop', 'citer_4_name', 'cdict_heyheyheyheyhey_test_four', 'citer_0_attrs_prop', 'citer_0_attrs_str', 'citer_2_attrs_str', 'cdict_hey_attrs_str', 'cdict_heyheyhey_attrs_str', 'citer_3_test_four', 'citer_2_attrs_prop', 'cdict_heyheyheyheyhey_name', 'citer_4_test_two', 'citer_1_test_three', 'citer_3_test_two', 'cdict_heyheyheyheyhey_test_three', 'citer_2_name', 'citer_0_test_two', 'cdict_hey_attrs_prop', 'cdict_hey_test_two', 'citer_0_name', 'cdict_heyheyhey_attrs_prop', 'cdict_heyheyheyhey_test_three', 'cdict_hey_name', 'cdict_hey_test_four', 'cdict_heyhey_test_one', 'cdict_heyheyheyhey_test_one', 'cdict_heyhey_name', 'cdict_heyhey_test_four', 'citer_0_test_four', 'citer_2_test_three', 'cdict_heyheyhey_test_one', 'citer_0_test_one', 'cdict_heyheyheyheyhey_attrs_prop', 'citer_1_attrs_str', 'cdict_heyheyhey_name', 'citer_3_attrs_str', 'citer_1_test_one', 'citer_3_test_one', 'cdict_heyhey_attrs_str', 'cdict_heyheyheyheyhey_test_one', 'citer_2_test_four', 'citer_4_attrs_str', 'cdict_heyheyheyheyhey_attrs_str', 'citer_2_test_two', 'citer_4_attrs_prop', 'cdict_heyheyheyheyhey_test_two', 'cdict_heyhey_test_three', 'cdict_heyheyhey_test_three', 'cdict_heyheyhey_test_four', 'citer_1_name', 'citer_1_test_four', 'cdict_heyheyheyhey_test_two', 'cdict_heyheyheyhey_test_four'} vs {'cdict.heyheyheyheyhey.attrs_str', 'cdict.heyheyheyhey.time', 'cdict.hey.test_three', 'cdict.heyhey.attrs_prop', 'citer.0.test_two', 'cdict.heyheyheyhey.name', 'citer.1.attrs_str', 'citer.2.attrs_str', 'cdict.component_type', 'citer.4.attrs_str', 'citer.3.test_two', 'cdict.time', 'cdict.heyheyhey.time', 'citer.4.test_two', 'citer.2.name', 'citer.4.test_four', 'citer.0.test_four', 'cdict.hey.test_four', 'citer.2.test_four', 'cdict.name', 'citer.1.test_two', 'cdict.heyheyhey.test_four', 'citer.1.time', 'citer.0.test_one', 'cdict.heyheyhey.attrs_prop', 'citer.component_type', 'citer.1.test_one', 'cdict.heyheyheyhey.test_one', 'cdict.heyhey.test_one', 'citer.0.time', 'cdict.heyheyheyheyhey.test_four', 'citer.4.name', 'citer.2.attrs_prop', 'dynamic_state_vars', 'cdict.hey.time', 'cdict.heyhey.test_two', 'cdict.heyheyhey.test_three', 'cdict.heyheyhey.name', 'citer.1.test_three', 'cdict.hey.test_one', 'citer.3.attrs_str', 'citer.3.attrs_prop', 'citer.4.attrs_prop', 'cdict.heyheyhey.attrs_str', 'citer.3.test_four', 'citer.2.test_three', 'citer.3.test_one', 'cdict.hey.test_two', 'citer.2.time', 'cdict.heyheyhey.test_two', 'cdict.heyheyheyheyhey.test_one', 'citer.time', 'cdict.hey.attrs_str', 'cdict.heyheyhey.test_one', 'cdict.heyheyheyhey.attrs_prop', 'cdict.heyheyheyheyhey.test_three', 'cdict.heyheyheyheyhey.time', 'cdict.current_item', 'cdict.heyheyheyhey.test_two', 'citer.1.test_four', 'citer.2.test_one', 'citer.0.attrs_str', 'citer.1.attrs_prop', 'dynamic_output_vars', 'citer.0.attrs_prop', 'cdict.heyheyheyheyhey.name', 'cdict.heyhey.attrs_str', 'cdict.heyheyheyhey.attrs_str', 'cdict.hey.attrs_prop', 'citer.current_item', 'cdict.heyheyheyhey.test_three', 'cdict.heyhey.test_three', 'cdict.heyheyheyheyhey.attrs_prop', 'citer.3.name', 'citer.3.test_three', 'citer.4.test_three', 'cdict.heyhey.name', 'cdict.heyhey.time', 'citer.3.time', 'citer.1.name', 'citer.2.test_two', 'citer.0.name', 'cdict.heyheyheyhey.test_four', 'cdict.heyhey.test_four', 'time', 'citer.name', 'name', 'cdict.hey.name', 'citer.4.test_one', 'citer.0.test_three', 'dynamic_input_vars', 'cdict.heyheyheyheyhey.test_two', 'citer.4.time'}[0m
F..[propertylog             ][33mWARN: test signals: 5 0| 0 0[0m
[propertylog             ][97mpre-vert: 0 25[0m
[propertylog             ][97mfinal: 0 25[0m
..[solvablelog             ][33mWARN: economics update cb economics-pink-clerk | 0 [0m
[solvablelog             ][33mWARN: cost update cb termcosts-bone-solvent [0m
[solvablelog             ][33mWARN: cost update cb comp2-dyadic-comptroller [0m
[solvablelog             ][33mWARN: economics update cb economics-pink-clerk | 0 [0m
[solvablelog             ][33mWARN: cost update cb termcosts-bone-solvent [0m
[solvablelog             ][33mWARN: cost update cb comp2-dyadic-comptroller [0m
[solvablelog             ][33mWARN: economics update cb economics-pink-clerk | 0 [0m
[solvablelog             ][33mWARN: cost update cb termcosts-bone-solvent [0m
[solvablelog             ][33mWARN: cost update cb comp2-dyadic-comptroller [0m
[solvablelog             ][33mWARN: economics update cb economics-pink-clerk | 0 [0m
[solvablelog             ][33mWARN: cost update cb termcosts-bone-solvent [0m
[solvablelog             ][33mWARN: cost update cb comp2-dyadic-comptroller [0m
..[solvablelog             ][33mWARN: economics update cb economics-exact-congruence | 0 [0m
[solvablelog             ][33mWARN: cost update cb termcosts-acute-grid [0m
[solvablelog             ][33mWARN: cost update cb comp2-leather-portrait [0m
[solvablelog             ][33mWARN: economics update cb economics-exact-congruence | 0 [0m
[solvablelog             ][33mWARN: cost update cb termcosts-acute-grid [0m
[solvablelog             ][33mWARN: cost update cb comp2-leather-portrait [0m
[solvablelog             ][33mWARN: economics update cb economics-exact-congruence | 0 [0m
[solvablelog             ][33mWARN: cost update cb termcosts-acute-grid [0m
[solvablelog             ][33mWARN: cost update cb comp2-leather-portrait [0m
[solvablelog             ][33mWARN: economics update cb economics-exact-congruence | 0 [0m
[solvablelog             ][33mWARN: cost update cb termcosts-acute-grid [0m
[solvablelog             ][33mWARN: cost update cb comp2-leather-portrait [0m
.[solvablelog             ][33mWARN: economics update cb economics-exact-congruence | 5 [0m
[solvablelog             ][33mWARN: cost update cb termcosts-acute-grid [0m
[solvablelog             ][33mWARN: cost update cb comp2-leather-portrait [0m
[solvablelog             ][33mWARN: economics update cb economics-exact-congruence | 5 [0m
[solvablelog             ][33mWARN: cost update cb termcosts-acute-grid [0m
[solvablelog             ][33mWARN: cost update cb comp2-leather-portrait [0m
.[solvablelog             ][33mWARN: economics update cb economics-exact-congruence | 10 [0m
[solvablelog             ][33mWARN: cost update cb termcosts-acute-grid [0m
[solvablelog             ][33mWARN: cost update cb comp2-leather-portrait [0m
[solvablelog             ][33mWARN: economics update cb economics-exact-congruence | 10 [0m
[solvablelog             ][33mWARN: cost update cb termcosts-acute-grid [0m
[solvablelog             ][33mWARN: cost update cb comp2-leather-portrait [0m
.[solvablelog             ][33mWARN: economics update cb economics-exact-congruence | 15 [0m
[solvablelog             ][33mWARN: cost update cb termcosts-acute-grid [0m
[solvablelog             ][33mWARN: cost update cb comp2-leather-portrait [0m
[solvablelog             ][33mWARN: economics update cb economics-exact-congruence | 15 [0m
[solvablelog             ][33mWARN: cost update cb termcosts-acute-grid [0m
[solvablelog             ][33mWARN: cost update cb comp2-leather-portrait [0m
..........[costlog                 ][33mWARN: assigning cost to non CostModel based slot comp[0m
[solvablelog             ][33mWARN: economics update cb economics-unsorted-technician | 0 [0m
[solvablelog             ][33mWARN: economics update cb economics-unsorted-technician | 0 [0m
[solvablelog             ][33mWARN: economics update cb economics-unsorted-technician | 0 [0m
[solvablelog             ][33mWARN: economics update cb economics-unsorted-technician | 0 [0m
..[solvablelog             ][33mWARN: economics update cb economics-ternary-particle | 0 [0m
[solvablelog             ][33mWARN: cost update cb comp2-mode-vector [0m
[solvablelog             ][33mWARN: economics update cb economics-ternary-particle | 0 [0m
[solvablelog             ][33mWARN: cost update cb comp2-mode-vector [0m
[solvablelog             ][33mWARN: economics update cb economics-ternary-particle | 0 [0m
[solvablelog             ][33mWARN: cost update cb comp2-mode-vector [0m
[solvablelog             ][33mWARN: economics update cb economics-ternary-particle | 0 [0m
[solvablelog             ][33mWARN: cost update cb comp2-mode-vector [0m
..[solvablelog             ][33mWARN: economics update cb economics-asphalt-developer | 0 [0m
[solvablelog             ][33mWARN: cost update cb comp1-ecru-trainer [0m
[solvablelog             ][33mWARN: cost update cb comp2-gold-regression [0m
[solvablelog             ][33mWARN: economics update cb economics-asphalt-developer | 0 [0m
[solvablelog             ][33mWARN: cost update cb comp1-ecru-trainer [0m
[solvablelog             ][33mWARN: cost update cb comp2-gold-regression [0m
[solvablelog             ][33mWARN: economics update cb economics-asphalt-developer | 0 [0m
[solvablelog             ][33mWARN: cost update cb comp1-ecru-trainer [0m
[solvablelog             ][33mWARN: cost update cb comp2-gold-regression [0m
[solvablelog             ][33mWARN: economics update cb economics-asphalt-developer | 0 [0m
[solvablelog             ][33mWARN: cost update cb comp1-ecru-trainer [0m
[solvablelog             ][33mWARN: cost update cb comp2-gold-regression [0m
..[solvablelog             ][33mWARN: economics update cb economics-similar-comment | 0 [0m
[solvablelog             ][33mWARN: cost update cb comp1-gilded-span [0m
[solvablelog             ][33mWARN: cost update cb comp2-visible-strut [0m
[solvablelog             ][33mWARN: economics update cb economics-similar-comment | 0 [0m
[solvablelog             ][33mWARN: cost update cb comp1-gilded-span [0m
[solvablelog             ][33mWARN: cost update cb comp2-visible-strut [0m
[solvablelog             ][33mWARN: economics update cb economics-similar-comment | 0 [0m
[solvablelog             ][33mWARN: cost update cb comp1-gilded-span [0m
[solvablelog             ][33mWARN: cost update cb comp2-visible-strut [0m
[solvablelog             ][33mWARN: economics update cb economics-similar-comment | 0 [0m
[solvablelog             ][33mWARN: cost update cb comp1-gilded-span [0m
[solvablelog             ][33mWARN: cost update cb comp2-visible-strut [0m
..[solvablelog             ][33mWARN: economics update cb economics-quadratic-folio | 0 [0m
[solvablelog             ][33mWARN: economics update cb economics-quadratic-folio | 0 [0m
[solvablelog             ][33mWARN: economics update cb economics-quadratic-folio | 0 [0m
[solvablelog             ][33mWARN: economics update cb economics-quadratic-folio | 0 [0m
..[solvablelog             ][33mWARN: cost update cb metalbase-symmetric-float [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 0 [0m
[solvablelog             ][33mWARN: cost update cb metalbase-symmetric-float [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 0 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 1 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 10 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 20 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
.[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
[solvablelog             ][33mWARN: cost update cb fan-equidistant-transpose [0m
[solvablelog             ][33mWARN: cost update cb motor-commutative-block [0m
[solvablelog             ][33mWARN: economics update cb sysecon-large-formula | 50 [0m
.[reflog                  ][33mWARN: key base.name not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[reflog                  ][33mWARN: key base.time not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[reflog                  ][33mWARN: key base.cost_per_item not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
[reflog                  ][33mWARN: key base not in refs dict_keys(['name', 'time', 'dynamic_input_vars', 'dynamic_state_vars', 'dynamic_output_vars', 'cost_per_item', 'fan.name', 'fan.time', 'fan.cost_per_item', 'fan.blade_cost_com', 'fan.area', 'fan.V', 'motor.name', 'motor.time', 'motor.cost_per_item', 'motor.spc_motor_cost', 'econ.name', 'econ.time', 'econ.term_length', 'econ.discount_rate', 'econ.fixed_output', 'econ.output_type', 'econ.terms_per_year', 'fan', 'motor', 'econ'])[0m
./home/olly/miniconda3/envs/nept/lib/python3.10/site-packages/scipy/integrate/_ivp/common.py:39: UserWarning: The following arguments have no effect for a chosen solver: `eval_kw`, `sys_kw`.
  warn("The following arguments have no effect for a chosen solver: {}."
./home/olly/miniconda3/envs/nept/lib/python3.10/site-packages/scipy/integrate/_ivp/common.py:39: UserWarning: The following arguments have no effect for a chosen solver: `eval_kw`, `sys_kw`.
  warn("The following arguments have no effect for a chosen solver: {}."
./home/olly/miniconda3/envs/nept/lib/python3.10/site-packages/scipy/integrate/_ivp/common.py:39: UserWarning: The following arguments have no effect for a chosen solver: `eval_kw`, `sys_kw`.
  warn("The following arguments have no effect for a chosen solver: {}."
./home/olly/miniconda3/envs/nept/lib/python3.10/site-packages/scipy/integrate/_ivp/common.py:39: UserWarning: The following arguments have no effect for a chosen solver: `eval_kw`, `sys_kw`.
  warn("The following arguments have no effect for a chosen solver: {}."
.............  message: The solver successfully reached the end of the integration interval.
  success: True
   status: 0
        t: [ 0.000e+00  1.000e-03 ...  9.999e+00  1.000e+01]
        y: [[ 0.000e+00  1.515e-02 ... -5.212e-12 -5.407e-12]
            [ 0.000e+00  7.582e-06 ...  3.038e-01  3.038e-01]]
      sol: None
 t_events: None
 y_events: None
     nfev: 6014
     njev: 0
      nlu: 0
.  message: The solver successfully reached the end of the integration interval.
  success: True
   status: 0
        t: [ 0.000e+00  1.000e-03 ...  9.999e+00  1.000e+01]
        y: [[ 0.000e+00 -8.333e-10 ... -8.691e-02 -8.698e-02]
            [ 5.038e-01  5.038e-01 ...  4.464e-01  4.463e-01]]
      sol: None
 t_events: None
 y_events: None
     nfev: 6014
     njev: 0
      nlu: 0
  message: The solver successfully reached the end of the integration interval.
  success: True
   status: 0
        t: [ 0.000e+00  1.000e-03 ...  9.999e+00  1.000e+01]
        y: [[ 0.000e+00  1.519e-02 ...  2.148e+00  2.148e+00]
            [ 0.000e+00  7.595e-06 ...  3.092e-01  3.113e-01]]
      sol: None
 t_events: None
 y_events: None
     nfev: 6014
     njev: 0
      nlu: 0
  message: The solver successfully reached the end of the integration interval.
  success: True
   status: 0
        t: [ 0.000e+00  1.000e-02 ...  9.990e+00  1.000e+01]
        y: [[ 0.000e+00  0.000e+00 ...  0.000e+00  0.000e+00]
            [ 0.000e+00 -5.000e-04 ... -4.995e-01 -5.000e-01]]
      sol: None
 t_events: None
 y_events: None
     nfev: 6014
     njev: 0
      nlu: 0
[configlog               ][33mWARN: SimpleHeatExchanger.Thi has no type[0m
[configlog               ][33mWARN: SimpleHeatExchanger.mdot_h has no type[0m
[configlog               ][33mWARN: SimpleHeatExchanger.Cp_h has no type[0m
[configlog               ][33mWARN: SimpleHeatExchanger.Tci has no type[0m
[configlog               ][33mWARN: SimpleHeatExchanger.mdot_c has no type[0m
[configlog               ][33mWARN: SimpleHeatExchanger.Cp_c has no type[0m
[configlog               ][33mWARN: SimpleHeatExchanger.efficiency has no type[0m
[configlog               ][33mWARN: SimpleHeatExchanger.name has no type[0m
[configlog               ][33mWARN: SimpleCompressor.pressure_ratio has no type[0m
[configlog               ][33mWARN: SimpleCompressor.Tin has no type[0m
[configlog               ][33mWARN: SimpleCompressor.mdot has no type[0m
[configlog               ][33mWARN: SimpleCompressor.Cp has no type[0m
[configlog               ][33mWARN: SimpleCompressor.gamma has no type[0m
[configlog               ][33mWARN: SimpleCompressor.efficiency has no type[0m
[configlog               ][33mWARN: SimpleCompressor.name has no type[0m
[configlog               ][33mWARN: SimpleTurbine.Pout has no type[0m
[configlog               ][33mWARN: SimpleTurbine.Pin has no type[0m
[configlog               ][33mWARN: SimpleTurbine.Tin has no type[0m
[configlog               ][33mWARN: SimpleTurbine.mdot has no type[0m
[configlog               ][33mWARN: SimpleTurbine.Cp has no type[0m
[configlog               ][33mWARN: SimpleTurbine.gamma has no type[0m
[configlog               ][33mWARN: SimpleTurbine.efficiency has no type[0m
[configlog               ][33mWARN: SimpleTurbine.name has no type[0m
[configlog               ][33mWARN: SimplePump.MFin has no type[0m
[configlog               ][33mWARN: SimplePump.pressure_ratio has no type[0m
[configlog               ][33mWARN: SimplePump.Tin has no type[0m
[configlog               ][33mWARN: SimplePump.Pin has no type[0m
[configlog               ][33mWARN: SimplePump.efficiency has no type[0m
[configlog               ][33mWARN: SimplePump.fluid has no type[0m
[configlog               ][33mWARN: SimplePump.name has no type[0m
../home/olly/miniconda3/envs/nept/lib/python3.10/site-packages/scipy/integrate/_ivp/common.py:39: UserWarning: The following arguments have no effect for a chosen solver: `eval_kw`, `sys_kw`.
  warn("The following arguments have no effect for a chosen solver: {}."
..         41738 function calls (41056 primitive calls) in 0.019 seconds

   Ordered by: internal time
   List reduced from 690 to 10 due to restriction <10>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      159    0.001    0.000    0.002    0.000 /mnt/c/Users/Sup/Ottermatics Dropbox/Ottermatics/engforge/engforge/engforge_attributes.py:72(_get_init_attrs_data)
      511    0.001    0.000    0.002    0.000 /mnt/c/Users/Sup/Ottermatics Dropbox/Ottermatics/engforge/engforge/system_reference.py:142(set)
       34    0.001    0.000    0.002    0.000 /mnt/c/Users/Sup/Ottermatics Dropbox/Ottermatics/engforge/engforge/configuration.py:439(go_through_configurations)
    10687    0.001    0.000    0.001    0.000 {built-in method builtins.isinstance}
        2    0.001    0.000    0.001    0.000 /home/olly/miniconda3/envs/nept/lib/python3.10/logging/__init__.py:1403(_clear_cache)
      511    0.000    0.000    0.000    0.000 /mnt/c/Users/Sup/Ottermatics Dropbox/Ottermatics/engforge/engforge/system_reference.py:181(setup_calls)
       71    0.000    0.000    0.000    0.000 /mnt/c/Users/Sup/Ottermatics Dropbox/Ottermatics/engforge/engforge/configuration.py:376(<dictcomp>)
  647/621    0.000    0.000    0.001    0.000 /mnt/c/Users/Sup/Ottermatics Dropbox/Ottermatics/engforge/engforge/system_reference.py:217(value)
    128/3    0.000    0.000    0.000    0.000 {built-in method _abc._abc_subclasscheck}
       20    0.000    0.000    0.001    0.000 /mnt/c/Users/Sup/Ottermatics Dropbox/Ottermatics/engforge/engforge/problem_context.py:1061(sys_solver_constraints)


  message: The solver successfully reached the end of the integration interval.
  success: True
   status: 0
        t: [ 0.000e+00  1.000e-03 ...  9.999e+00  1.000e+01]
        y: [[ 0.000e+00  2.519e-02 ...  9.114e-01  9.114e-01]
            [ 0.000e+00  1.259e-05 ...  1.295e-01  1.305e-01]]
      sol: None
 t_events: None
 y_events: None
     nfev: 6014
     njev: 0
      nlu: 0
         9367986 function calls (9217517 primitive calls) in 3.971 seconds

   Ordered by: internal time
   List reduced from 650 to 10 due to restriction <10>

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
    42167    0.346    0.000    0.636    0.000 /mnt/c/Users/Sup/Ottermatics Dropbox/Ottermatics/engforge/engforge/engforge_attributes.py:72(_get_init_attrs_data)
   138428    0.260    0.000    0.531    0.000 /mnt/c/Users/Sup/Ottermatics Dropbox/Ottermatics/engforge/engforge/system_reference.py:142(set)
  2169815    0.152    0.000    0.152    0.000 {built-in method builtins.isinstance}
    36097    0.147    0.000    0.231    0.000 /mnt/c/Users/Sup/Ottermatics Dropbox/Ottermatics/engforge/engforge/configuration.py:376(<dictcomp>)
   258619    0.127    0.000    0.385    0.000 /mnt/c/Users/Sup/Ottermatics Dropbox/Ottermatics/engforge/engforge/system_reference.py:217(value)
    12029    0.116    0.000    0.423    0.000 /mnt/c/Users/Sup/Ottermatics Dropbox/Ottermatics/engforge/engforge/system_reference.py:35(refset_get)
   138428    0.102    0.000    0.114    0.000 /mnt/c/Users/Sup/Ottermatics Dropbox/Ottermatics/engforge/engforge/system_reference.py:181(setup_calls)
     6014    0.090    0.000    3.719    0.001 /mnt/c/Users/Sup/Ottermatics Dropbox/Ottermatics/engforge/engforge/problem_context.py:829(integral_rate)
  1118936    0.084    0.000    0.084    0.000 /mnt/c/Users/Sup/Ottermatics Dropbox/Ottermatics/engforge/engforge/configuration.py:370(<lambda>)
     6016    0.079    0.000    0.188    0.000 /mnt/c/Users/Sup/Ottermatics Dropbox/Ottermatics/engforge/engforge/problem_context.py:1061(sys_solver_constraints)


[flowinput-basic-technici][33mWARN: pipe already added: <engforge.eng.pipes.Pipe object at 0x7fdaedbe2770>[0m
[pipenode-crimson-prism  ][33mWARN: pipe already added: <engforge.eng.pipes.Pipe object at 0x7fdaedbe2770>[0m
[flowinput-basic-technici][33mWARN: pipe already added: <engforge.eng.pipes.Pipe object at 0x7fdaed3f92a0>[0m
[pipenode-violet-rhombus ][33mWARN: pipe already added: <engforge.eng.pipes.Pipe object at 0x7fdaed3f92a0>[0m
[pipenode-crimson-prism  ][33mWARN: pipe already added: <engforge.eng.pipes.Pipe object at 0x7fdaed3f9120>[0m
[pipenode-amber-bumper   ][33mWARN: pipe already added: <engforge.eng.pipes.Pipe object at 0x7fdaed3f9120>[0m
[pipenode-violet-rhombus ][33mWARN: pipe already added: <engforge.eng.pipes.Pipe object at 0x7fdaecf91120>[0m
[pipenode-amber-bumper   ][33mWARN: pipe already added: <engforge.eng.pipes.Pipe object at 0x7fdaecf91120>[0m
[pipenode-amber-bumper   ][33mWARN: pipe already added: <engforge.eng.pipes.Pipe object at 0x7fdaecf93640>[0m
[flowinput-irregular-exec][33mWARN: pipe already added: <engforge.eng.pipes.Pipe object at 0x7fdaecf93640>[0m
[pipenode-n2z            ][33mWARN: pipe already added: <engforge.eng.pipes.Pipe object at 0x7fdaed369540>[0m
[pipenode-crimson-prism  ][33mWARN: pipe already added: <engforge.eng.pipes.Pipe object at 0x7fdaed369540>[0m
[pipenode-violet-rhombus ][33mWARN: pipe already added: <engforge.eng.pipes.Pipe object at 0x7fdaed36a7d0>[0m
[pipenode-n3z            ][33mWARN: pipe already added: <engforge.eng.pipes.Pipe object at 0x7fdaed36a7d0>[0m
[pipenode-amber-bumper   ][33mWARN: pipe already added: <engforge.eng.pipes.Pipe object at 0x7fdaedbec700>[0m
[pipenode-n4z            ][33mWARN: pipe already added: <engforge.eng.pipes.Pipe object at 0x7fdaedbec700>[0m
[pipenode-crimson-prism  ][33mWARN: pipe already added: <engforge.eng.pipes.Pipe object at 0x7fdaedbec220>[0m
[pipenode-n4z            ][33mWARN: pipe already added: <engforge.eng.pipes.Pipe object at 0x7fdaedbec220>[0m
[flowinput-ordered-ion   ][33mWARN: pipe already added: <engforge.eng.pipes.Pipe object at 0x7fdaedbec610>[0m
[pipenode-n4z            ][33mWARN: pipe already added: <engforge.eng.pipes.Pipe object at 0x7fdaedbec610>[0m
[pipenode-n3z            ][33mWARN: pipe already added: <engforge.eng.pipes.Pipe object at 0x7fdaedbee1a0>[0m
[pipenode-n2z            ][33mWARN: pipe already added: <engforge.eng.pipes.Pipe object at 0x7fdaedbee1a0>[0m
[pipelog                 ][97madding flowinput.140578448755632[0m
[pipelog                 ][97madding pipe.140578268260208[0m
[pipelog                 ][97madding pipenode.140578448766240[0m
[pipelog                 ][97madding pipe.140578268260208[0m
[pipelog                 ][97madding pipe.140578259964192[0m
[pipelog                 ][97madding pipenode.140578264004400[0m
[pipelog                 ][97madding pipe.140578259964192[0m
[pipelog                 ][97madding pipe.140578255343904[0m
[pipelog                 ][97madding pipenode.140578448586352[0m
[pipelog                 ][97madding pipe.140578259964576[0m
[pipelog                 ][97madding pipe.140578255343904[0m
[pipelog                 ][97madding pipe.140578259380176[0m
[pipelog                 ][97madding pipenode.140578250697328[0m
[pipelog                 ][97madding pipe.140578259380176[0m
[pipelog                 ][97madding pipe.140578268307872[0m
[pipelog                 ][97madding pipenode.140578268168048[0m
[pipelog                 ][97madding pipe.140578259375424[0m
[pipelog                 ][97madding pipe.140578268307872[0m
[pipelog                 ][97madding pipe.140578255353408[0m
[pipelog                 ][97madding flowinput.140578268158352[0m
[pipelog                 ][97madding pipe.140578255353408[0m
[pipelog                 ][97madding pipe.140578268301056[0m
[pipelog                 ][97madding pipenode.140578250694592[0m
[pipelog                 ][97madding pipe.140578268301056[0m
[pipelog                 ][97madding pipe.140578268299808[0m
[pipelog                 ][97madding pipe.140578268300816[0m
[pipelog                 ][97madding flowinput.140578250687152[0m
[pipelog                 ][97madding pipe.140578268300816[0m
[pipesystem-silver-electr][97mfound cycle: ['pipenode.140578264004400', 'pipenode.140578448766240', 'pipenode.140578250694592'][0m
[pipesystem-silver-electr][97mfound cycle: ['flowinput.140578448755632', 'pipenode.140578448586352', 'pipenode.140578250697328', 'pipenode.140578268168048', 'pipenode.140578448766240'][0m
[pipesystem-silver-electr][97mfound cycle: ['pipenode.140578264004400', 'pipenode.140578448586352', 'pipenode.140578250697328', 'pipenode.140578268168048', 'pipenode.140578448766240'][0m
[pipelog                 ][97madding flowinput.140578448755632[0m
[pipelog                 ][97madding pipe.140578268260208[0m
[pipelog                 ][97madding pipenode.140578448766240[0m
[pipelog                 ][97madding pipe.140578268260208[0m
[pipelog                 ][97madding pipe.140578259964192[0m
[pipelog                 ][97madding pipenode.140578264004400[0m
[pipelog                 ][97madding pipe.140578259964192[0m
[pipelog                 ][97madding pipe.140578255343904[0m
[pipelog                 ][97madding pipenode.140578448586352[0m
[pipelog                 ][97madding pipe.140578259964576[0m
[pipelog                 ][97madding pipe.140578255343904[0m
[pipelog                 ][97madding pipe.140578259380176[0m
[pipelog                 ][97madding pipenode.140578250697328[0m
[pipelog                 ][97madding pipe.140578259380176[0m
[pipelog                 ][97madding pipe.140578268307872[0m
[pipelog                 ][97madding pipenode.140578268168048[0m
[pipelog                 ][97madding pipe.140578259375424[0m
[pipelog                 ][97madding pipe.140578268307872[0m
[pipelog                 ][97madding pipe.140578255353408[0m
[pipelog                 ][97madding flowinput.140578268158352[0m
[pipelog                 ][97madding pipe.140578255353408[0m
[pipelog                 ][97madding pipe.140578268301056[0m
[pipelog                 ][97madding pipenode.140578250694592[0m
[pipelog                 ][97madding pipe.140578268301056[0m
[pipelog                 ][97madding pipe.140578268299808[0m
[pipelog                 ][97madding pipe.140578268300816[0m
[pipelog                 ][97madding flowinput.140578250687152[0m
[pipelog                 ][97madding pipe.140578268300816[0m
[pipesystem-silver-electr][97mfound cycle: ['pipenode.140578264004400', 'pipenode.140578448766240', 'pipenode.140578250694592'][0m
[pipesystem-silver-electr][97mfound cycle: ['flowinput.140578448755632', 'pipenode.140578448586352', 'pipenode.140578250697328', 'pipenode.140578268168048', 'pipenode.140578448766240'][0m
[pipesystem-silver-electr][97mfound cycle: ['pipenode.140578264004400', 'pipenode.140578448586352', 'pipenode.140578250697328', 'pipenode.140578268168048', 'pipenode.140578448766240'][0m
................../home/olly/miniconda3/envs/nept/lib/python3.10/site-packages/scipy/integrate/_ivp/common.py:39: UserWarning: The following arguments have no effect for a chosen solver: `eval_kw`, `sys_kw`.
  warn("The following arguments have no effect for a chosen solver: {}."
.../home/olly/miniconda3/envs/nept/lib/python3.10/site-packages/scipy/optimize/_optimize.py:404: RuntimeWarning: Values in x were outside bounds during a minimize step, clipping to bounds
  warnings.warn("Values in x were outside bounds during a "
..............{'output': {0: {'Xstart': {'Rc': 0.25, 'Ro': 0.33, 'Lo': 0.3, 'y_offset': 0, 'x_offset': 0, 'X_spring_center': 0, 'gear_thickness': 0.0127, 'main_gear_speed_min': 2.0943933333333336, 'main_gear_speed_max': 12.56636}, 'Ystart': {'cost_slv': 100.6987015536568, 'sym_slv': 0.24998547725644396}, 'Xans': {'Rc': 0.12498459338569347, 'Ro': 0.28433133970000174, 'Lo': 0.30001323349520465, 'y_offset': 0.005110978330743903, 'x_offset': 0.0, 'X_spring_center': 0.0, 'gear_thickness': 1.5354692528951374e-10, 'main_gear_speed_min': 2.0943933333333336, 'main_gear_speed_max': 16.573568727851246}, 'success': True, 'Yobj': {'cost_slv': 9.063928481810376e-07, 'sym_slv': 0.06249999999999997}, 'Ycon': {'val_slidercrank_min_Lo': 0.050031548264479114, 'eq_slidercrank.gear_pos_slv_ineq_REF[a2f9c0][callable.REF[a2c340][slidercrank.final_gear_ratio]_0_ineq]': 4.166153112856449, 'eq_slidercrank.crank_pos_slv_ineq_REF[a2ee40][callable.REF[a2c1c0][slidercrank.crank_gear_ratio]_0_ineq]': 0.43957375053191405, 'eq_slidercrank.motor_pos_slv_ineq_REF[a2f940][callable.REF[a2c2c0][slidercrank.motor_gear_ratio]_0_ineq]': 9.477711323333391, 'eq_slidercrank.size_ineq_REF[fe2040][callable.REF[a2dc40][callable.<lambda>]_REF[fe25c0][slidercrank.overall_length]_ineq]': 0.05001757973340837, 'eq_slidercrank.gear_speed_slv_eq_REF[f6e940][callable.REF[f6fe40][slidercrank.dx_goal]_0_eq]': -5.551115123125783e-17, 'eq_slidercrank.range_slv_eq_REF[a2d340][callable.REF[a2ec40][slidercrank.ds_goal]_0_eq]': -7.105427357601002e-15}, 'ans':  message: Optimization terminated successfully
 success: True
  status: 0
     fun: 0.06250090639284815
       x: [ 1.250e-01  2.843e-01  3.000e-01  5.111e-03  0.000e+00
            0.000e+00  1.535e-10  2.094e+00  1.657e+01]
     nit: 5
     jac: [ 1.000e+00  3.877e-05 -1.240e-04  5.503e-03  0.000e+00
            0.000e+00  5.903e+03  0.000e+00  0.000e+00]
    nfev: 52
    njev: 5, 'weights': None, 'constraints': {'constraints': [{'type': 'ineq', 'fun': <function objectify.<locals>.<lambda> at 0x7fdaed7a1c60>}, {'type': 'ineq', 'fun': <function objectify.<locals>.<lambda> at 0x7fdaed7a0ca0>}, {'type': 'ineq', 'fun': <function objectify.<locals>.<lambda> at 0x7fdaec724af0>}, {'type': 'ineq', 'fun': <function objectify.<locals>.<lambda> at 0x7fdaec724d30>}, {'type': 'ineq', 'fun': <function objectify.<locals>.<lambda> at 0x7fdaec724f70>}, {'type': 'eq', 'fun': <function objectify.<locals>.<lambda> at 0x7fdaec7252d0>}, {'type': 'eq', 'fun': <function objectify.<locals>.<lambda> at 0x7fdaec7256c0>}], 'bounds': [[None, None], [None, None], [None, None], [None, None], [None, None], [None, None], [0, None], [0, None], [0, None]], 'info': ['val_slidercrank_min_Lo', 'eq_slidercrank.gear_pos_slv_ineq_REF[a2f9c0][callable.REF[a2c340][slidercrank.final_gear_ratio]_0_ineq]', 'eq_slidercrank.crank_pos_slv_ineq_REF[a2ee40][callable.REF[a2c1c0][slidercrank.crank_gear_ratio]_0_ineq]', 'eq_slidercrank.motor_pos_slv_ineq_REF[a2f940][callable.REF[a2c2c0][slidercrank.motor_gear_ratio]_0_ineq]', 'eq_slidercrank.size_ineq_REF[fe2040][callable.REF[a2dc40][callable.<lambda>]_REF[fe25c0][slidercrank.overall_length]_ineq]', 'eq_slidercrank.gear_speed_slv_eq_REF[f6e940][callable.REF[f6fe40][slidercrank.dx_goal]_0_eq]', 'eq_slidercrank.range_slv_eq_REF[a2d340][callable.REF[a2ec40][slidercrank.ds_goal]_0_eq]']}}}, 'input_sets': {0: {}}}
.  message: The solver successfully reached the end of the integration interval.
  success: True
   status: 0
        t: [ 0.000e+00  1.000e-02  2.000e-02  3.000e-02  4.000e-02
             5.000e-02  6.000e-02  7.000e-02  8.000e-02  9.000e-02
             1.000e-01]
        y: [[ 0.000e+00  1.480e-01 ...  1.028e+00  1.099e+00]
            [ 0.000e+00  7.467e-04 ...  5.152e-02  6.217e-02]]
      sol: None
 t_events: None
 y_events: None
     nfev: 74
     njev: 0
      nlu: 0
........[shapelysection-shapely s][33mWARN: overriding material Material(name='default', elastic_modulus=1, poissons_ratio=0, yield_strength=1, density=1, color='w') with ANSI_4130(name='steel 4130', elastic_modulus=205000000000.0, poissons_ratio=0.28, yield_strength=460000000.0, density=7872.0, color=(0.204903, 0.375746, 0.553533, 1.0))[0m
[shapelysection-shapely s][97mcalculating shape bounds![0m
[shapelysection-shapely s][97mcalculating shape bounds![0m
[cantilever_beam         ][97mrunning with combos: None | () | {} [0m
[cantilever_beam         ][97mrunning load combo : gravity with solver linear[0m
+----------------+
| Statics Check: |
+----------------+

+------------------+--------+--------+--------+--------+--------+--------+--------+---------+--------+---------+----------+---------+
| Load Combination | Sum FX | Sum RX | Sum FY | Sum RY | Sum FZ | Sum RZ | Sum MX | Sum RMX | Sum MY | Sum RMY |  Sum MZ  | Sum RMZ |
+------------------+--------+--------+--------+--------+--------+--------+--------+---------+--------+---------+----------+---------+
|     gravity      | 3e+03  | -3e+03 |   0    |   0    |   0    |   0    |   0    |    0    |   0    |    0    | -1.5e+04 | 1.5e+04 |
+------------------+--------+--------+--------+--------+--------+--------+--------+---------+--------+---------+----------+---------+

[cantilever_beam         ][97mdetermining failures for gravity[0m
[cantilever_beam         ][97mchecking mesh failure gravity[0m
[cantilever_beam         ][97mdetermine combo gravity failures...[0m
[cantilever_beam         ][97mchecking mesh failure gravity[0m
[cantilever_beam         ][97mno estimated failures found[0m
.[beam-mem                ][97mevaluating stresses for gravity @ 0.0 w {}[0m
[beam-mem                ][97mevaluating stresses for gravity @ 0.5 w {}[0m
[beam-mem                ][97mevaluating stresses for gravity @ 1.0 w {}[0m
[beam-mem                ][97mevaluating stresses for gravity @ 0.0 w {}[0m
[beam-mem                ][97mevaluating stresses for gravity @ 0.5 w {}[0m
[beam-mem                ][97mevaluating stresses for gravity @ 1.0 w {}[0m
.[shapelysection-shapely s][33mWARN: overriding material Material(name='default', elastic_modulus=1, poissons_ratio=0, yield_strength=1, density=1, color='w') with ANSI_4130(name='steel 4130', elastic_modulus=205000000000.0, poissons_ratio=0.28, yield_strength=460000000.0, density=7872.0, color=(0.214298, 0.355619, 0.551184, 1.0))[0m
[shapelysection-shapely s][97mcalculating shape bounds![0m
[shapelysection-shapely s][97mcalculating shape bounds![0m
[truss                   ][97mrunning with combos: None | () | {} [0m
[truss                   ][97mrunning load combo : gravity with solver linear[0m
+----------------+
| Statics Check: |
+----------------+

+------------------+--------+-----------+--------+--------+--------+--------+--------+---------+--------+---------+----------+---------+
| Load Combination | Sum FX |   Sum RX  | Sum FY | Sum RY | Sum FZ | Sum RZ | Sum MX | Sum RMX | Sum MY | Sum RMY |  Sum MZ  | Sum RMZ |
+------------------+--------+-----------+--------+--------+--------+--------+--------+---------+--------+---------+----------+---------+
|     gravity      |   0    | -1.25e-12 | -3e+03 | 3e+03  |   0    |   0    |   0    |    0    |   0    |    0    | -1.2e+05 | 1.2e+05 |
+------------------+--------+-----------+--------+--------+--------+--------+--------+---------+--------+---------+----------+---------+

[truss                   ][97mdetermining failures for gravity[0m
[truss                   ][97mchecking mesh failure gravity[0m
[truss                   ][97mdetermine combo gravity failures...[0m
[truss                   ][97mchecking mesh failure gravity[0m
[truss                   ][97mno estimated failures found[0m
